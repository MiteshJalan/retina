name: Build Retina Container Images

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  retina-images:
    name: Build Agent Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64", "arm64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-image \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}

  retina-win-images:
    name: Build Agent Windows Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["windows"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-image-win \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}

  operator-images:
    name: Build Operator Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make retina-operator-image \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}

  kubectl-retina-images:
    name: Build kubectl-retina Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: ["linux"]
        arch: ["amd64", "arm64"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Build Images
        shell: bash
        run: |
          set -euo pipefail
          echo "TAG=$(make version)" >> $GITHUB_ENV
          make kubectl-retina-image \
            IMAGE_NAMESPACE=${{ github.repository }} \
            PLATFORM=${{ matrix.platform }}/${{ matrix.arch }}

  e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
      - run: go version

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_NETWORK_AGENT_TEST }}

      - name: Run E2E Tests
        shell: bash
        run: |
          set -euo pipefail
          export TAG=$(make version)
          export AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_NETWORK_AGENT_TEST }}
          export AZURE_ACR_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID_NETWORK_AGENT_TEST }}
          go test -v ./test/e2e/scenarios/retina/*.go -timeout 30m -tags=e2e -count=1